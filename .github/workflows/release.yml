# =============================================================================
# Release Pipeline for nx-astro plugin
# =============================================================================
#
# Purpose:
#   Automated npm publishing with provenance after local versioning.
#
# Workflow:
#   1. Developer runs `pnpx nx release` locally to version and create git tag
#   2. Developer pushes tag to GitHub: `git push --tags`
#   3. This workflow automatically triggers on tag push
#   4. Workflow builds, tests, and publishes to npm with provenance
#   5. Workflow creates GitHub release
#
# Triggers:
#   - Automatic: Push of version tags (v*.*.*)
#
# Required Secrets:
#   - NPM_TOKEN: Automation token for npm registry (required for provenance)
#     - Go to https://www.npmjs.com/settings/YOUR_USERNAME/tokens
#     - Create a new "Automation" token (not Classic)
#     - Add it to GitHub repository secrets as NPM_TOKEN
#   - GITHUB_TOKEN: Automatically provided by GitHub Actions
#
# Security:
#   - Uses OIDC for npm provenance attestations
#   - Minimal permissions with id-token for OIDC
#   - Secrets are never exposed in logs
#
# Provenance:
#   - Publishes with npm provenance statements
#   - Creates cryptographically verifiable attestations
#   - Links published package to source code and build process
#   - Only available when publishing from GitHub Actions
#
# =============================================================================

name: Release

on:
  push:
    tags:
      - 'v*.*.*'

# Only allow one release at a time
concurrency:
  group: release
  cancel-in-progress: false

# Permissions required for npm provenance with OIDC
permissions:
  contents: write        # Create releases
  packages: write        # Publish packages
  id-token: write        # OIDC token for npm provenance

env:
  NODE_VERSION: '20.x'

jobs:
  # ===========================================================================
  # Job 1: Run Full Test Suite
  # ===========================================================================
  # Purpose:
  #   - Run all tests before publishing
  #   - Ensure the plugin is in a releasable state
  #   - Fail fast if any tests fail
  # ===========================================================================
  test:
    name: Run Full Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpx nx run-many -t lint --all --parallel=3

      - name: Run tests
        run: pnpx nx run-many -t test --all --parallel=3 --configuration=ci

      - name: Build plugin
        run: pnpx nx build nx-astro

      - name: Run E2E tests
        run: pnpx nx e2e nx-astro-e2e

      # Cache the built package for the publish job
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/nx-astro
          key: build-${{ github.sha }}

  # ===========================================================================
  # Job 2: Publish to npm
  # ===========================================================================
  # Purpose:
  #   - Publish to npm registry with provenance
  #   - Verify package is available
  # ===========================================================================
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Restore cached build or rebuild if cache miss
      - name: Restore build artifacts
        id: cache-restore
        uses: actions/cache@v4
        with:
          path: dist/nx-astro
          key: build-${{ github.sha }}

      - name: Build plugin (if cache miss)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: pnpx nx build nx-astro

      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Publish to npm with provenance
        run: |
          # Publish the built package from dist directory with provenance
          # The --provenance flag generates a signed attestation that:
          #   - Links the package to its source repository
          #   - Records the GitHub Actions workflow that built it
          #   - Creates a verifiable chain of custody
          # This requires:
          #   - Publishing from GitHub Actions (OIDC authentication)
          #   - id-token: write permission (set above)
          #   - An automation token in NPM_TOKEN secret
          cd dist/nx-astro
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Wait for npm registry propagation
        run: sleep 30

      - name: Verify npm package
        run: |
          PACKAGE_NAME="@geekvetica/nx-astro"
          VERSION="${{ steps.version.outputs.version }}"

          # Verify the package is available
          PUBLISHED_VERSION=$(npm view $PACKAGE_NAME version)
          echo "Published version on npm: $PUBLISHED_VERSION"

          if [ "$PUBLISHED_VERSION" = "$VERSION" ]; then
            echo "✓ Package successfully published to npm"
          else
            echo "✗ Version mismatch: expected $VERSION, got $PUBLISHED_VERSION"
            exit 1
          fi

      - name: Notify on success
        if: success()
        run: |
          echo "✓ Successfully published version ${{ steps.version.outputs.version }}"
          echo "NPM: https://www.npmjs.com/package/@geekvetica/nx-astro"
          echo "Verify provenance: npm audit signatures"

  # ===========================================================================
  # Job 3: Create GitHub Release
  # ===========================================================================
  # Purpose:
  #   - Create GitHub release with changelog
  #   - Link to npm package
  # ===========================================================================
  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract changelog
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"

          # Check if CHANGELOG.md exists
          if [ -f "CHANGELOG.md" ]; then
            # Extract changelog section for this version using awk
            CHANGELOG=$(awk -v ver="$VERSION" '
              /^## / {
                if (found) exit;
                if ($0 ~ ver) found=1;
                next;
              }
              found { print }
            ' CHANGELOG.md)

            if [ -n "$CHANGELOG" ]; then
              echo "changelog<<EOF" >> $GITHUB_OUTPUT
              echo "$CHANGELOG" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "changelog=Release $VERSION" >> $GITHUB_OUTPUT
            fi
          else
            echo "changelog=Release $VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.version.outputs.version }}
          body: |
            # nx-astro v${{ steps.version.outputs.version }}

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ```bash
            npm install @geekvetica/nx-astro@${{ steps.version.outputs.version }}
            # or
            pnpm add @geekvetica/nx-astro@${{ steps.version.outputs.version }}
            ```

            ## Provenance

            This package was published with npm provenance. Verify with:
            ```bash
            npm audit signatures
            ```

            ## Documentation

            See the [README](https://github.com/${{ github.repository }}) for usage instructions.
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on success
        run: |
          echo "✓ Successfully created GitHub release"
          echo "Release URL: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }}"
